let x = 10; //variable de tipo primitiva
console.log(x.length); 
console.log('Tipos primitivos');
//Objeto
let persona = {
    nombre: 'Carlos',
    apellido: 'Gil',
    email: 'cgil@gmail.com',
    edad: 28,
    idioma: 'ES',
    get lang(){
        return this.idioma.toUpperCase();
    },
    set lang(lang){
        this.idioma = lang.toUpperCase();
    },
    nombreCompleto: function(){//método o función en js
        return this.nombre+ +this.apellido;

    },
    get nombreEdad(){ //Éste es el método get
        return this.nombre+', edad: '+this.edad;
    }
    
}

console.log(persona.nombre);
console.log(persona.apellido);
console.log(persona.email);
console.log(persona.edad);
console.log(persona);
console.log(persona.nombreCompleto());
console.log('Ejecutando con un objeto');
let persona2 = new Object();
persona2.nombre = 'Juan';
persona2.direccion = 'Salada 14';
persona2.telefono ='5492618282821';
console.log(persona2.telefono);
console.log('Creamos un nuevo objeto');
console.log(persona['apellido']); //accedemos como si fuera unarreglo
//for in y accedemosal objeto como si fuera un arreglo
for(propiedad in persona){
    console.log(propiedad),
    console.log(persona[propiedad]);
}
console.log('Cambiamos y eliminamos un error');
persona.apellida = 'Betancud';//cambiamos dinamicamente el valor deun objeto
delete persona.apellida;//eliminamos el error
console.log(persona);

//Distinta forma de imprimir un objeto
//Número 1: la más sencilla: concatenar cada valor de cadapropiedad
console.log(' Distintas formas de imprimir un objeto: forma 1');
console.log(persona.nombre+', '+persona.apellido);

//Número 2: A traves del ciclo for in
console.log(' Distintas formas de imprimir un objeto: forma 2');
for(nombrePropiedad in persona){
    console.log(persona[nombrePropiedad]);
}

//Número 3: La función object.value()
console.log(' Distintas formas de imprimir un objeto: forma 3');
let personaArray = Object.values(persona);
console.log(personaArray);

//Número 4: Utilizaremos el método JSON.stringify
console.log(' Distintas formas de imprimir un objeto: forma 4');
let personaString = JSON.stringify(persona);
console.log(personaString);

console.log('Comenzamos a utilizar el método get');
console.log(persona.nombreEdad);

console.log('Comenzamos con el método get para idioma');
persona.lang ='es';
console.log(persona.lang);

function Persona3(nombre,apellido,email){//constructor
    this.nombre = nombre;
    this.apellido = apellido;
    this.email = email;
    this.nombreCompleto = function(){
        return this.nombre+' '+this.apellido;
    }
}
let padre = new Persona3('Leo', 'Lopez', 'lopezl@mail.com');
padre.nombre = 'Luis';//modificamos el nombre
padre.telefono ='5492618282821';
console.log(padre);
console.log(padre.nombreCompleto());//utilizamos la función
let madre = new Persona3('Laura', 'Contrera', 'contreral@mail.com');
console.log(madre);
confirm.log(madre.telefono);//La propiedad no está definida
console.log(madre.nombreCompleto());

//Diferentes formar de crear objetos
//Caso número 1
let miObjeto = new Object();//Esta es unaopción formal
//Caso número 2
let miObjeto2 = {}; // Esta opción es breve y recomendada
//Caso string 1
let miCadena1 = new String('Hola'); // Stringformal

//Caso con número 1
let miNumero = new Number(1);
//Caso con número 2
let miNumero2 = 1; //sintaxis recomendada

//Caso boolean 1
let miBoolean1 = new Boolean(false); //formal
//caso boolean 2
let miBoolean2 = false; //sintaxis recomendada

//Caso arreglo 1
let miArreglo1 = new Array();//formal
//Caso arreglo 2
let miArreglo2 = [];//Sintaxis recomendada

//Caso función 1
let miFuncion1 = new function(){};//Todo después de new es considerado objeto
//Caso funcion 2
let miFuncion2 = function(){};//Notación simplificada y recomendada

//Uso de prototype
Persona3.prototype.telefono ='2618383832';
console.log(padre);
console.log(madre.telefono);
madre.telefono = '5492618383832';
console.log(madre.telefono);

//Uso de call
let persona4 = {
    nombre: 'Juan',
    apellido: 'Perez',
    nombreCompleto2: function(titulo, telefono){
        return titulo+': '+this.nombre+' '+this.apellido+' '+telefono;
        //return this.nombre+' '+this.apellido;
    }
}
let persona5 ={
    nombre: 'Carlos',
    apellido: 'Lara'
}
console.log(persona4.nombreCompleto2('Lic.', '54926184843'));
console.log(persona4.nombreCompleto2.call(persona5, 'Ing.', '54928382739261'));

//Metodo Apply
let arreglo =['Ing.', '5492618686865'];
console.log(persona4.nombreCompleto2.apply(persona5));
